name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest, generator: "Unix Makefiles",
            build_type: "Release", build_tests: "true", cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Windows Latest MinGW", artifact: "Windows-MinGW.tar.xz",
            os: windows-latest, generator: "Unix Makefiles",
            build_type: "Release", build_tests: "true", cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
            os: ubuntu-latest, generator: "Unix Makefiles",
            build_type: "Release", build_tests: "true", cc: "gcc", cxx: "g++"
          }
        - {
            name: "macOS Latest Clang", artifact: "macOS.tar.xz",
            os: macos-latest, generator: "Unix Makefiles",
            build_type: "Release", build_tests: "true", cc: "clang", cxx: "clang++"
          }

    steps:
      - uses: actions/checkout@v2

      - name: Environment
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install Windows dependencies
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
        # cmd "${{ matrix.config.environment_script }}"

      - name: Install Ubuntu dependencies
        if: startsWith(matrix.config.name, 'ubuntu')
        run: |
          sudo apt-get update -y
          sudo apt-get install ninja-build cmake -y
          ninja --version
          cmake --version
          gcc --version

      - name: Install MacOS dependencies
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install p7zip cmake ninja
          ninja --version
          cmake --version
          
      - name: Configure project
        shell: bash
        run: |
          mkdir build
          mkdir out
          cmake \
            -S . \
            -B out \
            -DBUILD_TESTS:BOOL=${{ matrix.config.build_tests }} \
            -DCMAKE_BUILD_TYPE:STRING=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generator }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=out

      - name: Build project
        shell: bash
        run: cmake --build out --config ${{ matrix.config.build_type }}

      - name: Run unit tests
        shell: bash
        run: ./out/src/tests/${{ matrix.config.build_type }}/tests
